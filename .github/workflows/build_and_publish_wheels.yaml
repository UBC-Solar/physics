name: Build and Publish Wheels

on:
  push:
    tags:
      - 'v*.*.*'  # Build on version tags
  workflow_dispatch:

jobs:
  build_wheels:
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]  # Build on Linux, macOS, and Windows
        python-version: ["3.9", "3.10", "3.11"]  # Target different Python versions

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add Rust targets
        run: |
          rustup target add x86_64-apple-darwin || echo "x86_64-apple-darwin target already added"
          rustup target add aarch64-apple-darwin || echo "aarch64-apple-darwin target already added"
          rustup target add x86_64-unknown-linux-gnu || echo "Linux target already added"
          rustup target add x86_64-pc-windows-msvc || echo "Windows target already added"

      - name: Install cibuildwheel and dependencies
        run: pip install cibuildwheel setuptools-rust

      - name: Build wheels
        run: cibuildwheel --output-dir dist
        env:
          CIBW_ARCHS_MACOS: "x86_64 arm64"

      - name: Upload wheels to PyPI
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
