name: Build and Publish Wheels

on:
  workflow_run:
    workflows: ["Checks Workflow"]
    types:
      - completed

  release:
    types:
      - published

  workflow_dispatch:

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]  # Linux does not work!

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch full history including tags

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install and prepare build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools_scm==8.1.0 twine==5.1.1 setuptools_rust cibuildwheel==2.20.0
          python -m setuptools_scm
          git status

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add Rust targets
        run: |
          rustup target add x86_64-apple-darwin || echo "x86_64-apple-darwin target already added"
          rustup target add aarch64-apple-darwin || echo "aarch64-apple-darwin target already added"
          rustup target add x86_64-unknown-linux-gnu || echo "Linux target already added"
          rustup target add x86_64-pc-windows-msvc || echo "Windows target already added"

      - name: Build wheels
        run: cibuildwheel --output-dir dist
        env:
          CIBW_ARCHS_MACOS: "x86_64 arm64"

      - name: Upload wheels to PyPI
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
